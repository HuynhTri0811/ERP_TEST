// <auto-generated />
using System;
using ERP_TEST_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_TEST_API.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210404162315_CreateStaff,Part")]
    partial class CreateStaffPart
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP_TEST.Model.Model.Part", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartAdminID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PartParentOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("STT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Use")
                        .HasColumnType("bit");

                    b.HasKey("Oid");

                    b.HasIndex("PartParentOid");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("ERP_TEST.Model.Model.Staff", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PartOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaffId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StaffManegeOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oid");

                    b.HasIndex("PartOid");

                    b.HasIndex("StaffManegeOid");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ERP_TEST.Model.User", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ERP_TEST.Model.UserType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ERP_TEST.Model.Model.Part", b =>
                {
                    b.HasOne("ERP_TEST.Model.Model.Part", "PartParent")
                        .WithMany()
                        .HasForeignKey("PartParentOid");

                    b.Navigation("PartParent");
                });

            modelBuilder.Entity("ERP_TEST.Model.Model.Staff", b =>
                {
                    b.HasOne("ERP_TEST.Model.Model.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartOid");

                    b.HasOne("ERP_TEST.Model.Model.Staff", "StaffManege")
                        .WithMany()
                        .HasForeignKey("StaffManegeOid");

                    b.Navigation("Part");

                    b.Navigation("StaffManege");
                });
#pragma warning restore 612, 618
        }
    }
}
